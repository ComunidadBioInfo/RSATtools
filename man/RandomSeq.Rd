% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomSeq.R
\name{RandomSeq}
\alias{RandomSeq}
\title{Generate random sequences}
\usage{
RandomSeq(n, seq.length, format = "fasta", type = NULL, seed = NULL,
  alphabet = NULL, expfreq = NULL, bg.model = NULL,
  organism = NULL, oligo.length = NULL, length.file = NULL,
  lw = NULL)
}
\arguments{
\item{n}{Number of sequences to generate}

\item{seq.length}{Length of sequence to generate.}

\item{format}{Format of sequence(s) to generate}

\item{type}{Type of sequence(s) to generate (protein | DNA | other).}

\item{seed}{Seed for the random generator.}

\item{alphabet}{Alphabet. Must be followed by residue frequencies expressed precisely this way:    a:t # c:g #}

\item{expfreq}{Expected frequencies of oligomers in sequence(s) to generate. When this option is used, the sequences are generated according to a Markov chain.}

\item{bg.model}{Background model. Automatically load a pre-calibrated expected frequency file from the RSAT genome distribution. When this option is used, the options organism and \code{oligo.length} are also required, to indicate the organism and the oligonucleotide length, respectively.
This option is incompatible with the option \code{expfreq}.
Type of sequences used as background model for estimating expected oligonucleotide frequencies (supported models):
\itemize{
\item \code{equi} (equiprobable residue frequencies [default]).
\item \code{upstream} (all upstream sequences, allowing overlap with upstream ORFs. Requires to speciy a model organism).
\item \code{upstream-noorf} (all upstream sequences, preventing overlap with upstream ORFs. Requires to specify a model organism).
\item \code{intergenic} (intergenic frequencies. Whole set of intergenic regions, including upstream and downstream sequences. Requires to specify a model organism).
}}

\item{organism}{Name of the organism when using a background model.}

\item{oligo.length}{Length of oligomer when using a background model.}

\item{length.file}{Length file. Allows to generate random sequences with the same lengths as a set of reference sequences.The length file contains two columns : sequence ID (ignored) and sequence length.}

\item{lw}{Line width (0 for whole sequence on one line).}
}
\value{
a string with results retrieved from RSAT
}
\description{
Generates random sequences with RSAT.
}
\examples{
res <- RandomSeq(n = 3, seq.length = 100, format = "fasta",
                type = "DNA", seed = 12,
                organism = "Escherichia_coli_K12")
cat(res)
}
\author{
José Alquicira Hernández & Joselyn chávez
}
